<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<concept id="reusing_production_notes">
	<title>Production notes (reuse concepts and techniques)</title>
	<shortdesc>Production notes for the reuse section of this document.</shortdesc>
	<prolog>
		<author type="creator">Anna van Raaphorst</author>
		<author type="contributor">Richard Johnson</author>
		<publisher>OASIS (Organization for the Advancement of Structured Information Standards)</publisher>
		<copyright>
			<copyryear year="2006"/>
			<copyrholder>VR Communications, Inc.</copyrholder>
		</copyright>
		<critdates>
			<created date="2006-May-01"/>
			<revised modified="2006-August-09"/>
		</critdates>
		<metadata>
			<keywords>
				<keyword>reuse concepts and techniques</keyword>
				<keyword>content reuse</keyword>
				<indexterm>reuse concepts and techniques<indexterm>production notes</indexterm>
				</indexterm>
				<indexterm>production notes<indexterm>reuse concepts and techniques</indexterm>
				</indexterm>
				<indexterm>content reference mechanism</indexterm>
				<indexterm>conref</indexterm>
			</keywords>
			<prodinfo>
				<prodname>DITA Open Toolkit</prodname>
				<vrmlist>
					<vrm version="1.2.2"/>
				</vrmlist>
			</prodinfo>
		</metadata>
	</prolog>
	<conbody>
		<section>
			<title>How we reused content</title>
			<p>The DITA core vocabulary, which is a key feature of this document, has provided the authors many opportunities for content reuse. Most of the "about" topics in the book are "conref'ed" from the core vocabulary topic of the same name. For example, here is the core vocabulary content for the Ant topic:
		<codeblock>
&lt;conbody&gt;
&lt;section id="ant_term"&gt;
&lt;p&gt;
&lt;b&gt;Definition&lt;/b&gt;
&lt;/p&gt;
&lt;p&gt;A Java-based, open source tool provided by the Apache Foundation 
to automatically implement a sequence of build actions defined in an Ant build script. 
The Ant functionality is similar to the more well-known UNIX make 
and Windows nmake build toolsâ€”however, instead of using shell-based commands, 
like make, Ant uses Java classes. The configuration files are XML-based, 
calling out a target tree where various tasks get executed. Each task is run 
by an object that implements a particular task interface. Ant can be used 
for both software and document builds.&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;Usage&lt;/b&gt;
&lt;/p&gt;
&lt;p&gt;DITA Open Toolkit provides Java code and a set of 
XSLT transform scripts for producing different types of output, 
for example, XHTML, Eclipse help, JavaHelp, and PDF. 
Ant build scripts build DITA output by controlling the execution 
of the DITA Open Toolkit Java code and the XSLT transform scripts.&lt;/p&gt;
&lt;p&gt;Ant must be installed in your DITA processing environment 
for DITA Open Toolkit to function, but it is not part 
of the Toolkit installation package.&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;For more information&lt;/b&gt;
&lt;/p&gt;
&lt;p&gt;For information about the Ant version required by the Toolkit, 
see &lt;xref href="../release_current/sysreqs.dita" 
format="dita"&gt;System requirements and supported applications&lt;/xref&gt;.&lt;/p&gt;
&lt;p&gt;
&lt;b&gt;To obtain&lt;/b&gt;
&lt;/p&gt;
&lt;p&gt;You can download Ant from &lt;
xref href="http://ant.apache.org/bindownload.cgi" 
format="html" scope="external"/&gt;.&lt;/p&gt;
&lt;/section&gt;
&lt;/conbody&gt;
		</codeblock>
			</p>
			<p>Here is the conref in the About Ant topic:
		<codeblock>
&lt;conbody&gt;
&lt;section conref="../core_vocabulary/ant.dita#ant/ant_term"&gt;
&lt;/section&gt;
		</codeblock>
			</p>
		</section>
	</conbody>
</concept>
