<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "../dtd/task.dtd">
<!-- 
This file is part of the DITA Open Toolkit project hosted on Sourceforge.net.
See the accompanying license.txt file for applicable licenses.
-->
<task id="linux_settingenvvariables" xml:lang="en-us">
	<title>Setting environment variables on Linux</title>
	<prolog>
		<author type="creator">Jen Linton</author>
		<author type="creator">JoAnn Hackos</author>
		<author type="creator">Kylene Bruski</author>
		<author type="contributor">Anna van Raaphorst</author>
		<author type="contributor">Richard Johnson</author>
		<publisher>OASIS (Organization for the Advancement of Structured Information Standards)</publisher>
		<copyright>
			<copyryear year="2005"/>
			<copyrholder>Comtech Services, Inc.</copyrholder>
		</copyright>
		<critdates>
			<created date="2005-11-01"/>
			<revised modified="2007-04-09"/>
		</critdates>
		<metadata>
			<keywords>
				<keyword>installing DITA Open Toolkit</keyword>
				<keyword>environment variable</keyword>
				<indexterm>setting environment variables<indexterm>on Linux</indexterm>
				</indexterm>
				<indexterm>environment variables
					<indexterm>setting on Linux</indexterm>
					<indexterm>PATH</indexterm>
					<indexterm>ANT_HOME</indexterm>
					<indexterm>ANT_OPTS</indexterm>
					<indexterm>JAVA_HOME</indexterm>
					<indexterm>JHHOME</indexterm>
					<indexterm>CLASSPATH</indexterm>
				</indexterm>
				<indexterm>PATH environment variable</indexterm>
				<indexterm>ANT_HOME environment variable</indexterm>
				<indexterm>ANT_OPTS environment variable</indexterm>
				<indexterm>JAVA_HOME environment variable</indexterm>
				<indexterm>JHHOME environment variable</indexterm>
				<indexterm>CLASSPATH environment variable</indexterm>
			</keywords>
			<prodinfo>
				<prodname>DITA Open Toolkit</prodname>
				<vrmlist>
					<vrm version="1.4.1"/>
				</vrmlist>
			</prodinfo>
		</metadata>
	</prolog>
	<taskbody>
		<steps>
			<step>
				<cmd>Type in the Linux Console.</cmd>
			</step>
			<step>
				<cmd>Modify each <varname>environmental or system 
          variable</varname>.</cmd>
				<info>
					<p>Set the <varname>PATH</varname> environment variable to 
              include the directory where you installed the Ant bin 
              directory: <codeph>export PATH=${ANT_HOME}/bin:${JAVA_HOME}/bin:${PATH}</codeph>
					</p>
				</info>
				<info>
					<p>Set the <varname>ANT_HOME</varname> environment variable 
              to the directory where you installed Ant: <codeph>export ANT_HOME=${ant_dir}</codeph>
					</p>
				</info>
				<info>
					<p>Set the <varname>ANT_OPTS</varname> environment variable 
              to the directory where you installed Ant: <codeph>export ANT_OPTS="-Xmx256M"</codeph>
					</p>
				</info>
				<info>
					<p>Set the <varname>JAVA_HOME</varname> environment variable 
              to the directory where you installed the J2SE SDK 
              application: <codeph>export JAVA_HOME=${java_dir}</codeph>
					</p>
				</info>
				<info>
					<p>Set the <varname>JHHOME</varname> environment variable to 
              the directory where you installed the JavaHelp 
              application: <codeph>export JHHOME=${javahelp_dir}</codeph>
					</p>
				</info>
				<info>
					<p>Set the <varname>CLASSPATH </varname>environment variable 
              for DITA-OT: Set up your environment variable CLASSPATH to include the 
                  dost.jar. For example: 
                  <codeblock>export CLASSPATH=${ditaot_dir}/lib:${ditaot_dir}/lib/dost.jar:${ditaot_dir}/lib/resolver.jar</codeblock>
					</p>
				</info>
				<info>
					<p>Set the <varname>CLASSPATH </varname>environment variable 
              for the Apache FOP application: Set up your environment variable CLASSPATH to include the 
                  fop.jar, batik.jar and avalon.jar files in the FOP directory. 
                  For example: 
                  <codeblock>export CLASSPATH=${fop_dir}/build/fop.jar:${fop_dir}/lib/batik.jar:${fop_dir}/lib/avalon-framework-cvs-20020806.jar:${CLASSPATH}</codeblock>
					</p>
				</info>
				<info>
					<p>(If you use SAXON) Set environment variables for SAXON:
    <ol>
							<li>Set up CLASSPATH to include the saxon.jar file. For example:
					<codeblock expanse="page">export CLASSPATH=${CLASSPATH}:${saxon_dir}/saxon9.jar:${saxon_dir}/saxon9-dom.jar:${saxon_dir}/saxon9-dom4j.jar:${saxon_dir}/saxon9-jdom.jar:${saxon_dir}/saxon9-s9api.jar:${saxon_dir}/saxon9-sql.jar:${saxon_dir}/saxon9-xom.jar:${saxon_dir}/saxon9-xpath.jar:${saxon_dir}/saxon9-xqj.jar </codeblock>
							</li>
							<li>Set up ANT_OPTS. For example: <codeblock>export ANT_OPTS=${ANT_OPTS} -Djavax.xml.transform.TransformerFactory=com.icl.saxon.TransformerFactoryImpl</codeblock>
							</li>
						</ol>
					</p>
				</info>
				<info>
					<p>(If you use Xalan) Set environment variables for Xalan: Set up CLASSPATH to include the <filepath>xalan.jar</filepath> file and the 
              <filepath>xercesImpl.jar</filepath> file. For example:<codeblock expanse="page">export CLASSPATH=${CLASSPATH}:${xalan_dir}/bin </codeblock>
					</p>
				</info>
			</step>
		</steps>
	</taskbody>
</task>
