<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<!-- 
This file is part of the DITA Open Toolkit project hosted on Sourceforge.net.
See the accompanying license.txt file for applicable licenses.
-->
<concept id="topicmerge">
	<title>Topicmerge improvements</title>
	<prolog>
		<author type="creator">IBM</author>
		<author type="contributor">Richard Johnson</author>
		<publisher>OASIS (Organization for the Advancement of Structured Information Standards)</publisher>
		<copyright>
			<copyryear year="2006"/>
			<copyrholder>IBM</copyrholder>
		</copyright>
		<critdates>
			<created date="2006-May-01"/>
			<revised modified="2006-October-17"/>
		</critdates>
		<metadata>
			<keywords>
				<indexterm>release 1.3 features
					<indexterm>topicmerge improvements</indexterm>
				</indexterm>
				<indexterm>topicmerge release 1.3 feature</indexterm>
				<indexterm>out of memory error</indexterm>
			</keywords>
			<prodinfo>
				<prodname>DITA Open Toolkit</prodname>
				<vrmlist>
					<vrm version="1.3"/>
				</vrmlist>
			</prodinfo>
		</metadata>
	</prolog>
	<conbody>
		<p>The topicmerge feature improves the Toolkit build speed and reduces
the possibility of encountering an "out of memory" exception in the build process.</p>
<p>With the enhanced topicmerge feature, this situation will be less likely.
An intermediate merged file keeps the structure information in the ditamap, and the structured Toc will be reflected in the output.</p>
<p>Writing a simple script will help you learn about the effects of this feature.
DITA Open Toolkit 1.3, provides the TopicMerge module to
help you implement this feature. You can use this module to generate the
merged files. Here is an example.</p>
<p><lines>sample.xml:</lines><codeblock>&lt;project name="sample"&gt;
	&lt;property name="dita.dir" value="${basedir}"/&gt;
	&lt;import file="${dita.dir}${file.separator}build.xml"/&gt;

	&lt;target name="premerge"&gt;	
  		&lt;antcall target="preprocess"&gt;
  		&lt;param name="args.input" value="${input}"/&gt;
		&lt;param name="output.dir" value="${dita.dir}${file.separator}output"/&gt;
		&lt;/antcall&gt;
	&lt;/target&gt;
	&lt;target name="merge"  description="Merge topics" depends="premerge"&gt;
		&lt;basename property="temp.base" file="${input}" suffix=".ditamap"/&gt;
		&lt;property name="temp.input" value="${basedir}${file.separator}${dita.temp.dir}${file.separator}${temp.base}"/&gt;
		&lt;dirname property="temp.dir" file="${temp.input}"/&gt;
		&lt;pipeline message="topicmerge" module="TopicMerge" 
			inputmap="${temp.dir}${file.separator}${temp.base}.ditamap" 
			extparam="output=${dita.dir}${file.separator}output${file.separator}${temp.base}_merged.xml;
      style=${dita.dir}${file.separator}xsl${file.separator}pretty.xsl" /&gt; 
	&lt;/target&gt;
&lt;/project&gt;
</codeblock></p>
<p>To run the script: <userinput>ant -f sample.xml merge -Dinput="C:\DITA-OT1.3\test.ditamap</userinput>". 
<note>The path for -Dinput must be an absolute path</note></p>
	</conbody>
</concept>
