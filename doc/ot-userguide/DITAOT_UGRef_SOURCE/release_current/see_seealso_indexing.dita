<?xml version="1.0" encoding="utf-8"?>
<!-- This file is part of the DITA Open Toolkit project hosted on 
  Sourceforge.net. See the accompanying license.txt file for 
  applicable licenses.-->
<!--
    | (C) Copyright IBM Corporation 2005 - 2006. All Rights Reserved.
    *-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
 "concept.dtd">
<concept id="see_seealso_indexing" xml:lang="en-us">
	<title>New indexing elements (see, see also, sort as)</title>
	<prolog>
		<author type="creator">IBM</author>
		<author type="contributor">Richard Johnson</author>
		<publisher>OASIS (Organization for the Advancement of Structured Information Standards)</publisher>
		<copyright>
			<copyryear year="2006"/>
			<copyrholder>IBM</copyrholder>
		</copyright>
		<critdates>
			<created date="2006-Sepember-19"/>
			<revised modified="2006-October-17"/>
		</critdates>
		<metadata>
			<keywords>
				<indexterm>release 1.3 features</indexterm>
				<indexterm>indexing elements</indexterm>
				<indexterm>ICU (International Components for Unicode)</indexterm>
			</keywords>
			<prodinfo>
				<prodname>DITA Open Toolkit</prodname>
				<vrmlist>
					<vrm version="1.3"/>
				</vrmlist>
			</prodinfo>
		</metadata>
	</prolog>
	<conbody>
		<p>DITA 1.1 supports the following new indexing elements:</p>
		<ul>
			<li>&lt;index-see&gt;</li>
			<li>&lt;index-see-also&gt;</li>
			<li>&lt;index-sort-as&gt;</li>
		</ul>
		<section>
			<title>See and See also indexing elements</title>
			<p>In DITA 1.0,
you cannot specify the &lt;see&gt; and &lt;see also&gt; index entries by using the
current &lt;indexterm&gt; element. The DITA 1.1 standard introduces the following
new child elements for &lt;indexterm&gt; that support this functionality:</p>
			<ul>
				<li>index-see</li>
				<li>index-see-also</li>
			</ul>
			<p>For example, you can add the kind of index entry shown below: 
<codeblock>&lt;indexterm&gt;computer
   &lt;index-see&gt;monitor&lt;/index-see&gt;
   &lt;index-see-also&gt;Illustration&lt;/index-see-also&gt; 
&lt;/indexterm&gt;
</codeblock>
			</p>
			<p>Then, if you generate HTML Help, JavaHelp, and PDF output with the indexing function
enabled, the index entries will look like the following:
<screen>
computer 43
        See monitor
        See also Illustration
        </screen>
			</p>
			<p>In HTMLHelp and JavaHelp, the output will contain hyperlinks to the "see" and "see also" entries. In PDF output, the output is not hyperlinked.</p>
			<p>See and See also indexing is ignored in XHTML. 
			In PDF, you must enable indexing using the FO plug-in provided by Idiom.</p>
		</section>
		<section>
			<title>Sort order indexing elements</title>
			<p>With the DITA 1.1 standard,
you can specify a sort phrase and sort index entries under the sort phrase.
This feature allows you to sort an index entry in a
way different from the default.
One example would be to disregard insignificant leading text, such
as punctuation or words like "the" or "a".</p>
			<p>Another example would be to sort &lt;data&gt; under
the letter D rather than the character "&lt;", or to include such an entry
under both the punctuation heading and also the letter D. 
In this case there would be
index entry directives differentiated only by the sort order. 
</p>
			<p>If you put the following content in the source file:
			<codeblock>
&lt;indexterm&gt;data&lt;index-sort-as&gt;key&lt;/index-sort-as&gt;&lt;/indexterm&gt;
&lt;indexterm&gt;indextest&lt;index-sort-as&gt;abc&lt;/index-sort-as&gt;&lt;/indexterm&gt;
</codeblock> 
the output should be:
<screen>
indextest data
</screen>
			</p>
			<p>Another example might be a translation
project in which a document needs to be translated into Japanese. Many of the index
entries contain kanji, which need to be sorted in phonetic order. The translators,
who can understand the language and see the entry in its context, can insert
the <codeph>&lt;index-sort-as&gt;</codeph> elements into the <codeph>&lt;indexterm&gt;</codeph> elements
as part of their localization work. </p>
		</section>
		<section>
			<title>Supporting ICU in index sorting</title>
			<p>With DITA Open Toolkit 1.3, you can get correctly sorted index output
for different languages. </p>
			<p>During normal transformation, the Toolkit
looks for ICU (International Components Unicode) classes inside the <codeph>classpath</codeph> element.
If the ICU is enabled, the Toolkit uses ICU's Collator class to do the comparing and
sorting. If the ICU is not enabled, the Toolkit will use the JDK's Collator class
to do the comparing and sorting.
<note>The ICU is included in the Toolkit 1.3 full installation package.</note>
			</p>
		</section>
	</conbody>
</concept>
