<?xml version="1.0" encoding="utf-8"?>
<!-- This file is part of the DITA Open Toolkit project hosted on 
 Sourceforge.net. See the accompanying license.txt file for 
 applicable licenses.-->
<!--
  | (C) Copyright IBM Corporation 2005 - 2006. All Rights Reserved.
  *-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN"
"concept.dtd">
<concept id="extensible_metadata" xml:lang="en-us">
	<title>Extensible metadata attributes</title>
	<prolog>
		<author type="creator">IBM</author>
		<author type="contributor">Richard Johnson</author>
		<publisher>OASIS (Organization for the Advancement of Structured Information Standards)</publisher>
		<copyright>
			<copyryear year="2006"/>
			<copyrholder>IBM</copyrholder>
		</copyright>
		<critdates>
			<created date="2006-Sepember-19"/>
			<revised modified="2006-October-12"/>
		</critdates>
		<metadata>
			<keywords>
				<indexterm>release 1.3 features</indexterm>
				<indexterm>extensible metadata attributes</indexterm>
			</keywords>
			<prodinfo>
				<prodname>DITA Open Toolkit</prodname>
				<vrmlist>
					<vrm version="1.3"/>
				</vrmlist>
			</prodinfo>
		</metadata>
	</prolog>
	<conbody>
		<section>
			<p>As an aid to information architects, extensible metadata attributes are part of the proposed DITA 1.1 standard, and are supported by DITA Open Toolkit 1.3.</p>
			<note>Because OASIS DITA 1.1 was not yet approved at the time DITA Open Toolkit 1.3 was released, 
the functionality described here should be considered preliminary until DITA 1.1 is approved, the 1.3 Toolkit assessed relative
to DITA 1.1, and appropriate changes made to the Toolkit, if necessary.</note>
		</section>
		<section>
			<title>Example</title>
			<ul>
				<li>As a DITA information architect, you could:<p>
						<ol>
							<li>Define new attributes that the team needs, for example "proglanguage". </li>
							<li>Express each new attribute as a separate domain package, for example
proglanguage.mod, with the new attribute specialized from the "props" attribute.</li>
							<li>Integrate the domain packages into the authoring DTDs or schemas:  <ol>
									<li> Redefine the "props" attribute entity to include the "proglanguage" attribute.
Similarly, you can redefine element entities to integrate new domain elements.</li>
									<li>Add the new attribute domain to the list of domains in the domains
attribute, preceded by an "a", for example, <codeph>domains="a(props proglanguage)"</codeph>.</li>
								</ol>
							</li>
						</ol>
					</p>
				</li>
				<li>As a writer, you could: <ol>
						<li>Add values to the new attributes of an element.</li>
						<li>Define values in the DITA filter file.</li>
						<li>Transform the DITA source files to remove or flag the content based on
the new attributes, for example flagging all <codeph>proglanguage="Java"</codeph>
						</li>
					</ol>
					<p>After you do that, another writer could reuse the content. </p>
					<p>A
specialization-unaware trademarking tool requires generalization of the contributed
content. If the user runs all the content through the tool, the content is
processed and filtered against the new attributes after the generalization.
The new attributes are now collapsed into the "props" attribute.  
<ol>
							<li>The generalization turns <codeph>proglanguage="Java"</codeph> into <codeph>props="proglanguage(Java)"</codeph>.</li>
							<li>The conditional processing transform recognizes the new form as equivalent
to the old, and the instruction "<codeph>flag all proglanguage=java</codeph>"
operates on either <codeph>props="proglanguage(Java)"</codeph> or <codeph>proglanguage="Java"</codeph>.</li>
						</ol>
					</p>
				</li>
			</ul>
		</section>
	</conbody>
</concept>
