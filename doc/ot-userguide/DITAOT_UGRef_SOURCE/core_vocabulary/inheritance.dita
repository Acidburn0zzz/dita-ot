<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "../dtd/concept.dtd">
<concept id="inheritance">
	<title>Inheritance</title>
	<shortdesc/>
	<prolog>
		<author type="creator">Anna van Raaphorst</author>
		<author type="contributor">Richard Johnson</author>
		<publisher>OASIS (Organization for the Advancement of Structured Information Standards)</publisher>
		<copyright>
			<copyryear year="2006"/>
			<copyrholder>VR Communications, Inc.</copyrholder>
		</copyright>
		<critdates>
			<created date="2006-May-01"/>
			<revised modified="2006-August-08"/>
		</critdates>
		<metadata>
			<keywords>
				<keyword>DITA core vocabulary</keyword>
				<keyword>DITA controlled vocabulary</keyword>
				<keyword>inheritance</keyword>
				<indexterm>inheritance</indexterm>
			</keywords>
			<prodinfo>
				<prodname>DITA Open Toolkit</prodname>
				<vrmlist>
					<vrm version="1.2.2"/>
				</vrmlist>
			</prodinfo>
		</metadata>
	</prolog>
	<conbody>
		<section id="inheritance_term">
			<p>
				<b>Definition</b>
			</p>
			<p>In object-oriented programming, a way to form new classes using classes that have already been defined. DITA and DITA Open Toolkit are structured around the principle of inheritance.</p>
			<p>
				<b>Usage</b>
			</p>
			<p>In DITA, child topics or elements inherit attributes from their parents. 
			For example, metadata applied to a section of a DITA file will automatically be applied to topics contained in the section. 
			Inheritance also plays an important role in DITA specialization, which allows you to extend a base topic to match your specific requirements by defining only the differences between it and its base topic; the bulk of the specialized definition is inherited.</p>
		</section>
	</conbody>
	<related-links>
		<link href="../reusing/aboutreuse.dita" scope="local"/>
	</related-links>
</concept>
