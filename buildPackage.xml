<?xml version="1.0"?>
<!-- (c) Copyright IBM Corp. 2004, 2006 All Rights Reserved. -->
<!-- build whole bin and source package for DITA Open Toolkit -->
<project name="build_DITA-OT_package" default="build-all-packages" 
            basedir=".">
  <description>Build source and binary packages for DITA Open Toolkit</description>

  <property name="HTMLHelpCompiler" value="C:\Program Files\HTML Help Workshop\hhc.exe"/>  
  <property name="args.fo.img.ext" value=".gif"/>
  <property name="package.output.dir" location="build\"/>
  <property name="package.name.root" value="DITA-OT"/>
  <property name="version" value="1.3"/>
  
  <property name="src.dir" location="src/"/>
  <property name="bin.dir" location="output2/"/>
  <property name="lib.dir" location="lib/"/>
  <property name="doc.dir" location="doc/"/>
  <property name="dtd.dir" location="dtd/"/>
  <property name="schema.dir" location="schema/"/>
  <property name="xsl.dir" location="xsl/"/>
  <property name="demo.dir" location="demo/"/>
  <property name="sample.dir" location="samples/"/>
  <property name="css.dir" location="css/"/>
  <property name="ant.dir" location="ant/"/>
  <property name="resource.dir" location="resource/"/>
  <property name="out.dir" location="out/"/>
  <property name="doc.out.dir" location="out/doc"/>
  
  <property name="dost.jar" location="${lib.dir}/dost.jar" />

  <property name="binary" value="DITA-OT${version}_bin" />
  <property name="source" value="DITA-OT${version}_src" />
  <property name="win32.zip.suffix" value=".zip" />
  <property name="linux.zip.suffix" value=".tar.gz" />
    
  <target name="init-package" depends="clean-package">
    <mkdir dir="${package.output.dir}"/>    
  </target>
  
  <target name="clean-package">
    <delete dir="${package.output.dir}"/>    
  </target>
  
  <target name="init-java" depends="clean-java">
    <mkdir dir="${lib.dir}" />
    <mkdir dir="${bin.dir}"/>
  </target>
  
  <target name="clean-java">
    <delete dir="${lib.dir}"/>
    <delete dir="${bin.dir}"/>
  </target>
  
  <target name="build-java" depends="init-java">
    <javac srcdir="${src.dir}" destdir="${bin.dir}" excludes="com/**"
      debug="on" source="1.4" target="1.4">
    </javac>
  </target>
  
  <target name="package-java" depends="build-java">    
    <jar destfile="${dost.jar}" basedir="${bin.dir}" manifest="manifest.mf"
           includes="**" />
  </target>
    
  <patternset id="pattern.package.general">
    <include name="*.*"/>
    <include name="ant/**"/>
    <include name="css/**"/>    
    <include name="demo/**"/>
    <include name="doc/**"/>
    <include name="dtd/**"/>
    <include name="plugins/**"/>
    <include name="resource/**"/>
    <include name="samples/**"/>
    <include name="schema/**"/>      
    <include name="xsl/**"/>
    <exclude name="doc/userguide-orig/**"/>
    <exclude name="build.number"/>
  </patternset>
    
  <target name="package-source">    
    <zip destfile="${package.output.dir}/${param.out.file}${win32.zip.suffix}">
      <zipfileset dir="./" prefix="${package.name.root}${version}-src">
        <patternset refid="pattern.package.general"/>
        <include name="src/**"/>
        <exclude name="APACHE-LICENSE-2_0.html"/>
        <exclude name="files.txt"/>
      </zipfileset>
    </zip>
    <tar destfile="${package.output.dir}/${param.out.file}${linux.zip.suffix}" 
      compression="gzip">
      <tarfileset dir="./" prefix="${package.name.root}${version}-src">
        <patternset refid="pattern.package.general"/>
        <include name="src/**"/>
        <exclude name="APACHE-LICENSE-2_0.html"/>
        <exclude name="files.txt"/>
      </tarfileset>
    </tar>
  </target>
  
  <target name="package-source-ASL">
    <zip destfile="${package.output.dir}/${param.out.file}${win32.zip.suffix}">
      <zipfileset dir="./" prefix="${package.name.root}${version}-src">
        <patternset refid="pattern.package.general"/>
        <include name="src/**"/>
        <exclude name="CommonPublicLicense-v10.html"/>
        <exclude name="files.txt"/>
      </zipfileset>
    </zip>
    <tar destfile="${package.output.dir}/${param.out.file}${linux.zip.suffix}" 
      compression="gzip">
      <tarfileset dir="./" prefix="${package.name.root}${version}-src">
        <patternset refid="pattern.package.general"/>
        <include name="src/**"/>
        <exclude name="CommonPublicLicense-v10.html"/>
        <exclude name="files.txt"/>
      </tarfileset>
    </tar>
  </target>
  
  <target name="package-binary">    
    <zip destfile="${package.output.dir}/${param.out.file}${win32.zip.suffix}">
      <zipfileset dir="./" prefix="${package.name.root}${version}">
        <patternset refid="pattern.package.general"/>
        <include name="lib/*.jar"/>
        <exclude name="APACHE-LICENSE-2_0.html"/>
      </zipfileset>
    </zip>
    
    <tar destfile="${package.output.dir}/${param.out.file}${linux.zip.suffix}" 
      compression="gzip">
      <tarfileset dir="./" prefix="${package.name.root}${version}">
        <patternset refid="pattern.package.general"/>
        <include name="lib/*.jar"/>
        <exclude name="APACHE-LICENSE-2_0.html"/>
      </tarfileset>
    </tar>
  </target>
  
  <target name="package-binary-ASL">    
    <zip destfile="${package.output.dir}/${param.out.file}${win32.zip.suffix}">
      <zipfileset dir="./" prefix="${package.name.root}${version}">
        <patternset refid="pattern.package.general"/>
        <include name="lib/*.jar"/>
        <exclude name="CommonPublicLicense-v10.html"/>
      </zipfileset>
    </zip>
    <tar destfile="${package.output.dir}/${param.out.file}${linux.zip.suffix}" 
      compression="gzip">
      <tarfileset dir="./" prefix="${package.name.root}${version}">
        <patternset refid="pattern.package.general"/>
        <include name="lib/*.jar"/>
        <exclude name="CommonPublicLicense-v10.html"/>
      </tarfileset>
    </tar>
  </target>
  
  <target name="build-package-source" depends="package-java, update-doc, copy-updated-doc">
    <antcall target="package-source">
      <param name="param.out.file" value="${source}"/>
    </antcall>
  </target>
  
  <target name="build-package-source-ASL" depends="package-java, update-doc, copy-updated-doc">
    <antcall target="package-source-ASL">
      <param name="param.out.file" value="${source}-ASL"/>
    </antcall>
  </target>
  
  <target name="build-package-binary" depends="package-java, update-doc, copy-updated-doc">
    <antcall target="package-binary">
      <param name="param.out.file" value="${binary}"/>
    </antcall>
  </target>
  
  <target name="build-package-binary-ASL" depends="package-java, update-doc, copy-updated-doc">
    <antcall target="package-binary-ASL">
      <param name="param.out.file" value="${binary}-ASL"/>
    </antcall>
  </target>
    
  <target name="build-package-binary-with-buildnum" 
    depends="package-java, update-doc">
    <buildnumber/>
    <tstamp>
      <format property="build.time" pattern="yyyyMMddhhmm"/>
    </tstamp>
    <antcall target="package-binary">
      <param name="param.out.file" 
        value="${package.name.root}${version}b${build.number}-bin.${build.time}"/>
    </antcall>
  </target>
  
  <target name="build-all-packages" depends="init-package, build-package-binary, build-package-binary-ASL, build-package-source, build-package-source-ASL"/>
  
  <target name="update-doc">
    <ant antfile="integrator.xml" target="integrate"/> 
    <ant antfile="build_demo.xml" target="doc.articles.web"/>
    <ant antfile="build_demo.xml" target="doc.articles.chm"/>
    <ant antfile="build_demo.xml" target="doc.articles.pdf"/>
    <ant antfile="build_demo.xml" target="doc.installguide.web"/>
    <ant antfile="build_demo.xml" target="doc.installguide.pdf"/>
    <ant antfile="build_demo.xml" target="doc.installguide.chm"/>
    <ant antfile="build_demo.xml" target="doc.readme.web"/>
    <ant antfile="build_demo.xml" target="doc.readme.chm"/>
    <ant antfile="build_demo.xml" target="doc.readme.pdf"/>
  </target>
  
  <target name="copy-updated-doc">
    <copy todir="${doc.dir}">
      <fileset dir="${doc.out.dir}">        
        <exclude name="**/*.hhp"/>
        <exclude name="**/*.hhc"/>
        <exclude name="**/*.hhk"/>
        <exclude name="**/*.fo"/>
        <exclude name="**/*.log"/>
        <exclude name="**/*.list"/>
        <exclude name="**/*.temp"/>
        <exclude name="**/*.db"/>
      </fileset>
    </copy>
  </target>
</project>